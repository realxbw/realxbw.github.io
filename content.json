{"meta":{"title":"xbw's blogs","subtitle":null,"description":null,"author":"xbw","url":"http://imxbw.me","root":"/"},"pages":[{"title":"categories","date":"2019-08-20T07:47:48.000Z","updated":"2019-08-20T07:48:29.243Z","comments":true,"path":"categories/index.html","permalink":"http://imxbw.me/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-08-20T07:48:59.000Z","updated":"2019-08-20T07:49:18.565Z","comments":true,"path":"tags/index.html","permalink":"http://imxbw.me/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"GPG","slug":"GPG","date":"2019-12-16T01:02:48.000Z","updated":"2019-12-16T05:37:02.215Z","comments":true,"path":"2019/12/16/GPG/","link":"","permalink":"http://imxbw.me/2019/12/16/GPG/","excerpt":"","text":"GPG PGPOpenPGPGnuPGGpg4win archlinux_GnuPGubuntu_GPG/PGP 相关参数 GPG 入门 [S] 密钥可以用于签名 [E] 密钥可以用于加密 [A] 密钥可以用于身份认证 [C] 密钥可以用于认证其他密钥 Key ID [fpr]完整的密钥指纹，一个完整的 40 个字符的密钥标识符 [LONG]长密钥ID，指纹的最后 16 个字符 [SHORT]短密钥ID，指纹的最后 8 个字符（避免使用，因为它们不足够唯一。） 123gpg --versiongpg --help 生成/变更密钥12345678910111213141516171819202122232425262728293031323334# 生成C主密钥，有效期2年gpg --quick-generate-key &quot;demo &lt;demo@example.org&gt;&quot; rsa4096 cert# 生成SC主密钥，有效期2年gpg --quick-generate-key &quot;demo &lt;demo@example.org&gt;&quot; rsa4096# 指定name、mail生成SC主密钥，E子密钥，有效期2年gpg --gen-key# 指定加密类型、长度、name、mail、有效期等生成SC主密钥，E子密钥gpg --full-generate-key# 添加子密钥gpg --quick-add-key [fpr] rsa4096 encr #[E]密钥gpg --quick-add-key [fpr] rsa4096 sign #[S]密钥gpg --quick-add-key [fpr] rsa4096 auth #[A]密钥# 添加相关身份gpg --quick-add-uid [fpr] &quot;demo2 &lt;demo@example.org&gt;&quot;# GnuPG 将会把你最近添加的 UID 作为你的主 UID，如果这与你想的不同，你应该改回来gpg --quick-set-primary-uid [fpr] &quot;demo &lt;demo@example.org&gt;&quot;# 如果你需要吊销一个身份（比如换了雇主并且旧的邮件地址不再有效了），你可以使用一行命令搞定：gpg --quick-revoke-uid [fpr] &apos;demo2 &lt;demo@example.org&gt;&apos;# 或者用如下命令gpg --edit-key [fpr]# 延长密钥过期日期gpg --quick-set-expire [fpr] 1ygpg --quick-set-expire [fpr] 2099-12-31# 删除私钥 (先删除私钥才可以删除公钥)gpg --delete-secret-keys [fpr]# 删除公钥gpg --delete-key [fpr] 查看密钥12345678910111213# 查看公钥gpg -kgpg --list-key [fpr]gpg --list-keysgpg --list-keys --keyid-format LONGgpg --list-keys --with-keygrip --keyid-format LONG# 查看私钥gpg -Kgpg --list-secret-keysgpg --list-secret-keys --keyid-format LONGgpg --with-keygrip --list-secret-keys --keyid-format LONG 导入/导出/发送/撤销证书 PGP Global DirectoryOpenPGPkeyserver 123456789101112131415161718192021222324# 导入gpg --import [import-file]# 导出gpg --export #仅导出公钥（主公钥&lt;pub&gt;/全部子公钥&lt;sub&gt;）gpg --export-secret-keys #导出私钥. 私钥内包含了公钥.（主私钥&lt;sec&gt;/全部子私钥&lt;ssb&gt;）gpg --export-secret-subkeys #只导出子密钥的私钥.（使用自己的私钥的正确做法，仅仅导出全部子私钥！）# 在导出时默认使用的是二进制的储存, 如果想导出成ASCII显示的, 可以加上参数 --armor# 可使用 -a 代替 --armor，使用 -o 代替 --output。gpg --armor --output [export-file] --export [fpr]gpg -a -o [export-file] --export [fpr]# 发送公钥到服务器gpg --send-key [fpr]gpg --keyserver hkp://pgp.mit.edu:80 --send-key [fpr]# 生成和使用撤销证书# 二进制证书 revocation.rev， 但会提示 “已强行使用 ASCII 封装过的输出”$ gpg --output [revocation.rev] --gen-revoke [fpr]# -a (--armor)输出文件为 revocation.rev.txt 文本文件$ gpg -a -o [revocation.rev.txt] --gen-revoke [fpr] Git 集成 PGP Managing commit signature verification - GitHub git config –global gpg.program “C:\\Program Files (x86)\\GnuPG\\bin\\gpg.exe” 12345λ git commit -S -am &quot;PGP&quot;gpg: skipped &quot;******&quot;: No secret keygpg: signing failed: No secret keyerror: gpg failed to sign the datafatal: failed to write commit object git config –global user.signingkey [LONG KEYID] 1234gpg: skipped &quot;name &lt;name@mail.com&gt;&quot;: secret key not availablegpg: signing failed: secret key not availableerror: gpg failed to sign the datafatal: failed to write commit object git config –global commit.gpgsign true 123git commit -S -am &quot;PGP&quot;&gt;&gt;git commit -am &quot;PGP&quot; 参考 用 PGP 保护代码完整性（一）：基本概念和工具 用 PGP 保护代码完整性（二）：生成你的主密钥 用 PGP 保护代码完整性（三）：生成 PGP 子密钥 用 PGP 保护代码完整性（四）：将主密钥移到离线存储中 用 PGP 保护代码完整性（五）：将子密钥移到一个硬件设备中 用 PGP 保护代码完整性（六）：在 Git 上使用 PGP 用 PGP 保护代码完整性（七）：保护在线帐户","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-08-16T01:02:53.187Z","updated":"2019-12-16T01:20:14.059Z","comments":true,"path":"2019/08/16/hello-world/","link":"","permalink":"http://imxbw.me/2019/08/16/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post123$ hexo new [layout] &lt;title&gt;$ hexo new \"My New Post\" More info: Writing Run server12$ hexo server$ hexo s More info: Server Generate static files12$ hexo generate$ hexo g More info: Generating Deploy to remote sites12$ hexo deploy$ hexo d More info: Deployment Generate static files and Deploy to remote sites12345$ hexo generate --deploy$ hexo deploy --generate$ hexo g -d$ hexo d -g","categories":[],"tags":[]}]}